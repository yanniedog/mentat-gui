[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "mentat-gui"
version = "0.1.0"
description = "Crypto Signal Scanner with multi-source data analysis"
authors = [
    {name = "Mentat Team", email = "team@mentat.ai"}
]
readme = "README.md"
license = {text = "MIT"}
requires-python = ">=3.11"
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Financial and Insurance Industry",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]

dependencies = [
    "pandas>=2.2.0,<3.0.0",
    "numpy>=2.4.0,<3.0.0",
    "scipy>=1.12.0,<2.0.0",
    "aiohttp>=3.9.0,<4.0.0",
    "tenacity>=8.2.0,<9.0.0",
    "pydantic>=2.7.0,<3.0.0",
    "pyyaml>=6.0.0,<7.0.0",
    "PyQt5>=5.15.0,<6.0.0",
    "pytrends>=4.9.0,<5.0.0",
    "lxml>=5.1.0,<6.0.0",
    "python-dateutil>=2.8.0,<3.0.0",
    "pytz>=2024.1,<2025.0",
    "urllib3>=2.2.0,<3.0.0",
    "certifi>=2024.2.0,<2025.0",
    "six>=1.16.0,<2.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=8.0.0,<9.0.0",
    "pytest-qt>=4.4.0,<5.0.0",
    "pytest-asyncio>=0.23.0,<1.0.0",
    "vcrpy>=6.0.0,<7.0.0",
    "black>=24.1.0,<25.0.0",
    "ruff>=0.2.0,<1.0.0",
    "isort>=5.13.0,<6.0.0",
]
fast = [
    "numba>=0.60.0,<1.0.0",
]

[project.scripts]
mentat-scan = "mentat_gui.__main__:main"

[tool.setuptools.packages.find]
where = ["."]
include = ["*"]
exclude = ["tests*", "*.tests"]

[tool.black]
line-length = 120
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.ruff]
target-version = "py311"
line-length = 120
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]

[tool.isort]
profile = "black"
line_length = 120
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--tb=short",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
] 